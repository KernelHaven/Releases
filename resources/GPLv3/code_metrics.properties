######################################
#    General Pipeline Parameters     #
######################################

resource_dir = res/
output_dir = output/
plugins_dir = plugins/
cache_dir = cache/
archive = false
#archive.dir = /some/dir
### Logging ###
log.dir = log/
log.console = true
log.file = true
log.level = INFO


##############################
#     Analysis Parameters    #
##############################

analysis.class = net.ssehub.kernel_haven.metric_haven.metric_components.MetricsRunner
analysis.output.type = csv

##############################
#     Metrics Parameters     #
##############################

# Activate this option to round results to two decimal digits and save disk space
metrics.round_results = true
metrics.max_parallel_threads = 4
# Allows an independent configuration of metrics initialization phase
# metrics.max_preparation_threads

# All code metrics (over 44,000 variations) are executed by default.
# Activate this option to run an atomic set of metrics (not all weight combinations), which contains about 660 metrics.
metrics.run.atomic_set = true

# Activate this option to select a single metric
# (and all of its variations):
#metrics.code_metrics = <place one metric name from below here>
#  net.ssehub.kernel_haven.metric_haven.code_metrics.BlocksPerFunctionMetric
#  net.ssehub.kernel_haven.metric_haven.code_metrics.CyclomaticComplexity
#  net.ssehub.kernel_haven.metric_haven.code_metrics.LoCMetric
#  net.ssehub.kernel_haven.metric_haven.code_metrics.EigenVectorCentrality
#  net.ssehub.kernel_haven.metric_haven.code_metrics.FanInOut
#  net.ssehub.kernel_haven.metric_haven.code_metrics.NestingDepth
#  net.ssehub.kernel_haven.metric_haven.code_metrics.TanglingDegree
#  net.ssehub.kernel_haven.metric_haven.code_metrics.UndisciplinedPreprocessorUsage
#  net.ssehub.kernel_haven.metric_haven.code_metrics.VariablesPerFunction
# All variations of a single metric / of all metrics are executed by default. Deactivate this option to select one
# specific variation of a single metric / multiple metrics:
metrics.function_measures.all_variations = true

# If the above parameter was deactivated to limit the analysis to a single variation, the parameters below may be used
# to select the specific variation. Omitted parameters will be treated as deactivated.
# Visit the following page for a detailed description: https://github.com/KernelHaven/MetricHaven
#metrics.function_measures.consider_scattering_degree = NO_SCATTERING | SD_VP | SD_FILE
#metrics.function_measures.consider_ctcr =  NO_CTCR | OUTGOING_CONNECTIONS | INCOMIG_CONNECTIONS | ALL_CTCR
#metrics.function_measures.consider_feature_definition_distance = NO_DISTANCE | SHORTEST_DISTANCE
#metrics.function_measures.consider_feature_types = NO_TYPE_MEASURING | TYPE_WEIGHTS_BY_FILE
## IF TYPE_WEIGHTS_BY_FILE was selected, specify a comma separated list of weights per type
#  metrics.function_measures.type_weight_definitions = type1:value1, type2:value2, ..., typeN:valueN
#metrics.function_measures.consider_feature_hierarchies = NO_HIERARCHY_MEASURING | HIERARCHY_WEIGHTS_BY_FILE | HIERARCHY_WEIGHTS_BY_LEVEL
## IF HIERARCHY_WEIGHTS_BY_FILE was selected, specify a comma separated list of weights per hierarchy type
#  metrics.function_measures.hierarchy_weight_definitions = top:value, intermediate:value, leaf:value
#metrics.function_measures.consider_varmodel_structures = NO_STRUCTURAL_MEASUREMENT | NUMBER_OF_CHILDREN | COC
#metrics.function_measures.feature_sizes = NO_FEATURE_SIZES | POSITIVE_SIZES | TOTAL_SIZES

# Some metrics specify also one individual setting. Use the settings below to configure those metrics. The order is
# in the same order as the metrics of the metrics.code_metrics parameter:
#metrics.blocks_per_function.measured_block_type = BLOCK_AS_ONE | SEPARATE_PARTIAL_BLOCKS
#metrics.cyclomatic_complexity.measured_type = MCCABE | VARIATION_POINTS | ALL
#metrics.loc.measured_type = SCOC | SCOF| PSCOF| DLOC | LOF| PLOF
# Eigenvector centrality and FanInOut share the same option from the next line:
#metrics.fan_in_out.type = (CLASSICAL_FAN | VP_FAN | DEGREE_CENTRALITY)_(IN | OUT[_NO_STUB][_NO_EXTERNAL])_(GLOBALLY | LOCALLY)
#metrics.nesting_depth.measured_type = (CLASSIC | VP | COMBINED)_ND_(MAX | AVG)
#metrics.tangling_degree.measured_type = TD_ALL | TD_VISIBLE
#metrics.variables_per_function.measured_variables_type = INTERNAL | EXTERNAL | EXTERNAL_WITH_BUILD_VARS | ALL | ALL_WITH_BUILD_VARS


#####################################
#    Common Extractor Parameters    #
#####################################

source_tree = <path / to / object of investigation>
arch = x86


################################
#     Code Model Parameters    #
################################

code.provider.timeout = 0
code.provider.cache.write = false
code.provider.cache.read = false
code.extractor.class =  net.ssehub.kernel_haven.srcml.SrcMLExtractor
code.extractor.files = arch/x86,block/,certs/,crypto/,drivers/,firmware/,fs/,init/,ipc/,kernel/,lib/,mm/,net/,security/,sound/,usr/,virt/
code.extractor.file_regex = .*\\.c
code.extractor.threads = 4
# Possible values: IGNORE, EXPAND_FUNCTION_CONDITION, INCLUDE
#code.extractor.header_handling =


################################
#    Build Model Parameters    #
################################

build.provider.timeout = 0
build.provider.cache.write = false
build.provider.cache.read = false
build.extractor.class = net.ssehub.kernel_haven.kbuildminer.KbuildMinerExtractor


#######################################
#     Variability Model Parameters    #
#######################################

variability.provider.timeout = 0
variability.provider.cache.write = false
variability.provider.cache.read = false
variability.extractor.class = net.ssehub.kernel_haven.kconfigreader.KconfigReaderExtractor
variability.extractor.find_locations = true
